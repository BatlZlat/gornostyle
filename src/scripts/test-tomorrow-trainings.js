const { getTomorrowTrainings } = require('./get-tomorrow-trainings');
const { notifyTomorrowTrainings } = require('../bot/admin-notify');

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –Ω–∞ –∑–∞–≤—Ç—Ä–∞
 */
async function testTomorrowTrainings() {
    console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö –Ω–∞ –∑–∞–≤—Ç—Ä–∞...\n');

    try {
        // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
        console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –∑–∞–≤—Ç—Ä–∞...');
        const trainings = await getTomorrowTrainings();
        console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${trainings.length} —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –∑–∞–≤—Ç—Ä–∞`);
        
        if (trainings.length > 0) {
            console.log('üìä –î–µ—Ç–∞–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:');
            trainings.forEach((training, index) => {
                console.log(`  ${index + 1}. ${training.is_individual ? '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è' : '–ì—Ä—É–ø–ø–æ–≤–∞—è'}`);
                console.log(`     –í—Ä–µ–º—è: ${training.start_time}`);
                console.log(`     –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${training.participants_list || '–ù–µ—Ç'}`);
                console.log(`     –¢—Ä–µ–Ω–µ—Ä: ${training.trainer_name || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
                console.log(`     –°—Ç–æ–∏–º–æ—Å—Ç—å: ${training.price} —Ä—É–±.`);
                console.log('');
            });
        } else {
            console.log('‚ÑπÔ∏è  –¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –Ω–µ—Ç');
        }

        // –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏)
        if (trainings.length > 0) {
            console.log('üì§ –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
            await notifyTomorrowTrainings(trainings);
            console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚è≠Ô∏è  –¢–µ—Å—Ç 2 –ø—Ä–æ–ø—É—â–µ–Ω: –Ω–µ—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
        }

        console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
    testTomorrowTrainings()
        .then(() => {
            console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            process.exit(0);
        })
        .catch((error) => {
            console.error('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ:', error);
            process.exit(1);
        });
}

module.exports = { testTomorrowTrainings };
