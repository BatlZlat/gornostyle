const sgMail = require('@sendgrid/mail');
const fs = require('fs').promises;

class SendGridEmailService {
    constructor() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SendGrid —Å API –∫–ª—é—á–æ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        const apiKey = process.env.SENDGRID_API_KEY;
        if (!apiKey) {
            console.warn('‚ö†Ô∏è  SENDGRID_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
        } else {
            sgMail.setApiKey(apiKey);
            console.log('‚úÖ SendGrid –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }
        
        this.fromEmail = process.env.SENDGRID_FROM_EMAIL || 'gornostyle72@yandex.ru';
        this.fromName = process.env.SENDGRID_FROM_NAME || '–ì–æ—Ä–Ω–æ—Å—Ç–∞–π–ª72';
    }

    async sendCertificateEmail(recipientEmail, certificateData) {
        try {
            if (!process.env.SENDGRID_API_KEY) {
                console.warn(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email –Ω–∞ ${recipientEmail}: SENDGRID_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
                return { success: false, error: 'SENDGRID_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' };
            }

            const { certificateId, certificateCode, recipientName, amount, message, pdfUrl } = certificateData;

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
            const htmlContent = this.generateCertificateEmailHTML(certificateData);

            // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
            const attachments = [];
            
            // –î–æ–±–∞–≤–ª—è–µ–º PDF —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–∏–µ
            if (pdfUrl) {
                try {
                    const pdfPath = pdfUrl.startsWith('/') 
                        ? `${__dirname}/../../public${pdfUrl}` 
                        : pdfUrl;
                    
                    console.log(`üìé –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å PDF: ${pdfPath}`);
                    const pdfBuffer = await fs.readFile(pdfPath);
                    
                    attachments.push({
                        content: pdfBuffer.toString('base64'),
                        filename: `certificate_${certificateCode}.pdf`,
                        type: 'application/pdf',
                        disposition: 'attachment'
                    });
                    
                    console.log(`üìé PDF –≤–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${pdfPath}`);
                } catch (pdfError) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ PDF —Ñ–∞–π–ª–∞:', pdfError);
                    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –±–µ–∑ PDF
                }
            }

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∏—Å—å–º–∞
            const mailOptions = {
                to: recipientEmail,
                from: {
                    email: this.fromEmail,
                    name: this.fromName
                },
                subject: `üéÅ –í–∞—à –ø–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ‚Ññ${certificateCode} - –ì–æ—Ä–Ω–æ—Å—Ç–∞–π–ª72`,
                html: htmlContent,
                attachments: attachments
            };

            console.log(`üìß –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ SendGrid –Ω–∞ ${recipientEmail}...`);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ SendGrid
            const response = await sgMail.send(mailOptions);
            
            console.log(`‚úÖ Email —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ SendGrid: ${response[0].headers['x-message-id']}`);
            
            return { 
                success: true, 
                messageId: response[0].headers['x-message-id'],
                service: 'sendgrid'
            };

        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email —á–µ—Ä–µ–∑ SendGrid –Ω–∞ ${recipientEmail}:`, error.message);
            console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
            
            return { 
                success: false, 
                error: error.message,
                code: error.code,
                service: 'sendgrid'
            };
        }
    }

    generateCertificateEmailHTML(certificateData) {
        const { 
            certificateCode, 
            amount, 
            recipientName, 
            message, 
            expiry_date,
            designImageUrl 
        } = certificateData;

        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
        let formattedExpiryDate = '–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
        try {
            const d = new Date(expiry_date);
            if (!isNaN(d.getTime())) {
                formattedExpiryDate = d.toLocaleDateString('ru-RU');
            }
        } catch (e) {}

        return `
        <!DOCTYPE html>
        <html lang="ru">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>–ü–æ–¥–∞—Ä–æ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ‚Ññ${certificateCode}</title>
            <style>
                body {
                    margin: 0;
                    padding: 0;
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: #333;
                }
                .container {
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                }
                .header {
                    background: white;
                    border-radius: 15px;
                    padding: 30px;
                    text-align: center;
                    margin-bottom: 20px;
                    border-bottom: 3px solid #3498db;
                }
                .certificate {
                    background: ${designImageUrl ? `url('${process.env.BASE_URL || 'https://gornostyle72.ru'}${designImageUrl}')` : 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'};
                    background-size: cover;
                    background-position: center;
                    border-radius: 20px;
                    padding: 40px;
                    color: white;
                    text-align: center;
                    position: relative;
                    margin-bottom: 30px;
                }
                .certificate::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: rgba(0, 0, 0, 0.4);
                    border-radius: 20px;
                }
                .certificate-content {
                    position: relative;
                    z-index: 2;
                }
                .info-block {
                    background: white;
                    border-radius: 15px;
                    padding: 30px;
                    margin-bottom: 20px;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
                <div class="header">
                    <h1 style="margin: 0; font-size: 2rem; color: #2c3e50;">üéø –ì–æ—Ä–Ω–æ—Å—Ç–∞–π–ª72</h1>
                    <p style="margin: 10px 0 0 0; color: #7f8c8d; font-size: 1.1rem;">–ì–æ—Ä–Ω–æ–ª—ã–∂–Ω—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å</p>
                </div>

                <!-- –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç -->
                <div class="certificate">
                    <div class="certificate-content">
                        <h2 style="margin: 0 0 20px 0; font-size: 1.4rem; font-weight: bold; text-shadow: 2px 2px 4px rgba(0,0,0,0.3);">
                            üéÅ –°–ï–†–¢–ò–§–ò–ö–ê–¢<br>–ù–ê –¢–†–ï–ù–ò–†–û–í–ö–£ –ü–û –ì–û–†–ù–´–ú –õ–´–ñ–ê–ú –ò–õ–ò –°–ù–û–£–ë–û–†–î–£
                        </h2>
                        
                        <div style="font-size: 1.8rem; font-weight: bold; color: #FFD700; text-shadow: 2px 2px 4px rgba(0,0,0,0.5); margin: 20px 0; letter-spacing: 0.1em;">
                            ‚Ññ ${certificateCode}
                        </div>
                        
                        <div style="font-size: 2.2rem; font-weight: bold; color: #FFD700; text-shadow: 1px 1px 2px rgba(0,0,0,0.5); margin: 20px 0;">
                            üí∞ ${amount} —Ä—É–±.
                        </div>
                        
                        ${recipientName ? `
                        <div style="margin: 20px 0; font-size: 1.1rem;">
                            <strong>üë§ –ö–æ–º—É:</strong><br>${recipientName}
                        </div>
                        ` : ''}
                        
                        ${message ? `
                        <div style="margin: 20px 0; font-size: 1rem; font-style: italic;">
                            "${message}"
                        </div>
                        ` : ''}
                        
                        <div style="margin-top: 30px; font-size: 0.9rem; opacity: 0.9;">
                            ‚è∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ: ${formattedExpiryDate}
                        </div>
                    </div>
                </div>

                <!-- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ -->
                <div class="info-block">
                    <h3 style="margin: 0 0 15px 0; color: #2c3e50; font-size: 1.2rem;">üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:</h3>
                    <ol style="margin: 0; padding-left: 20px; color: #333;">
                        <li style="margin-bottom: 8px;">–ü–æ–ª—É—á–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç - –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∫—Ä–∞—Å–∏–≤—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º</li>
                        <li style="margin-bottom: 8px;">–ü–æ–¥–∞—Ä–∏—Ç–µ –∏–ª–∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ - –º–æ–∂–µ—Ç–µ —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—é —Ü–∏—Ñ—Ä–æ–≤—É—é –≤–µ—Ä—Å–∏—é</li>
                        <li style="margin-bottom: 8px;">–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤ –±–æ—Ç–µ - –ø–æ–ª—É—á–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ –Ω–∞—à Telegram –±–æ—Ç @gornostyle72_bot</li>
                        <li style="margin-bottom: 8px;">–ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ - –≤—ã–±–∏—Ä–∞–π—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∏ –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏–ª–∏ –≥—Ä—É–ø–ø–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</li>
                    </ol>
                </div>

                <!-- –ö–æ–Ω—Ç–∞–∫—Ç—ã -->
                <div class="info-block">
                    <h3 style="margin: 0 0 15px 0; color: #2c3e50; font-size: 1.2rem;">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –∑–∞–ø–∏—Å–∏:</h3>
                    <p style="margin: 5px 0; color: #333;"><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (912) 392-49-56</p>
                    <p style="margin: 5px 0; color: #333;"><strong>Telegram:</strong> @gornostyle72_bot</p>
                    <p style="margin: 5px 0; color: #333;"><strong>–ê–¥—Ä–µ—Å:</strong> –≥. –¢—é–º–µ–Ω—å, —Å. –Ø—Ä, —É–ª. –ò—Å—Ç–æ—á–Ω–∏–∫, 2–ê</p>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è -->
                <div style="text-align: center; margin-bottom: 20px;">
                    <a href="https://t.me/gornostyle72_bot" style="display: inline-block; background: #3498db; color: white; padding: 15px 30px; border-radius: 25px; text-decoration: none; font-weight: bold; font-size: 1.1rem;">
                        üì± –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
                    </a>
                </div>

                <!-- –ü–æ–¥–≤–∞–ª -->
                <div class="info-block" style="text-align: center; border-top: 1px solid #e9ecef;">
                    <p style="margin: 0 0 10px 0; color: #7f8c8d; font-size: 1.1rem;">–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –ì–æ—Ä–Ω–æ—Å—Ç–∞–π–ª72! üéø</p>
                    <p style="margin: 0; color: #7f8c8d; font-size: 0.9rem;">
                        –≠—Ç–æ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤—ã—à–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º.
                    </p>
                </div>
            </div>
        </body>
        </html>
        `;
    }
}

module.exports = SendGridEmailService;
