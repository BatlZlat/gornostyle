#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üöÄ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ –ì–æ—Ä–Ω–æ—Å—Ç–∞–π–ª72\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
function analyzeFileSize(filePath) {
    try {
        const stats = fs.statSync(filePath);
        return stats.size;
    } catch (error) {
        return 0;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –±–∞–π—Ç –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
function formatBytes(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// –ê–Ω–∞–ª–∏–∑ CSS —Ñ–∞–π–ª–æ–≤
console.log('üìä –ê–Ω–∞–ª–∏–∑ CSS —Ñ–∞–π–ª–æ–≤:');
const cssFiles = [
    'public/css/style.css',
    'public/css/mobile.css'
];

let totalCssSize = 0;
cssFiles.forEach(file => {
    const size = analyzeFileSize(file);
    totalCssSize += size;
    console.log(`  ${path.basename(file)}: ${formatBytes(size)}`);
});
console.log(`  –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä CSS: ${formatBytes(totalCssSize)}\n`);

// –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
console.log('üñºÔ∏è  –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
const imageFiles = [
    'public/images/photo_trenagor.webp',
    'public/images/partners/maximum72.webp',
    'public/images/partners/nevidalia.webp',
    'public/images/partners/Richwood.webp',
    'public/images/trainers/pervuhin-aleksey.webp',
    'public/images/trainers/tebyakin-danil.webp'
];

let totalImageSize = 0;
imageFiles.forEach(file => {
    const size = analyzeFileSize(file);
    totalImageSize += size;
    console.log(`  ${path.basename(file)}: ${formatBytes(size)}`);
});
console.log(`  –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${formatBytes(totalImageSize)}\n`);

// –ê–Ω–∞–ª–∏–∑ JavaScript —Ñ–∞–π–ª–æ–≤
console.log('üìú –ê–Ω–∞–ª–∏–∑ JavaScript —Ñ–∞–π–ª–æ–≤:');
const jsFiles = [
    'public/js/main.js',
    'public/js/admin.js',
    'public/js/booking.js',
    'public/js/profile.js'
];

let totalJsSize = 0;
jsFiles.forEach(file => {
    const size = analyzeFileSize(file);
    totalJsSize += size;
    console.log(`  ${path.basename(file)}: ${formatBytes(size)}`);
});
console.log(`  –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä JavaScript: ${formatBytes(totalJsSize)}\n`);

// –ê–Ω–∞–ª–∏–∑ HTML —à–∞–±–ª–æ–Ω–æ–≤
console.log('üìÑ –ê–Ω–∞–ª–∏–∑ HTML —à–∞–±–ª–æ–Ω–æ–≤:');
const htmlFiles = [
    'views/index.ejs',
    'views/prices.ejs',
    'views/schedule.ejs'
];

let totalHtmlSize = 0;
htmlFiles.forEach(file => {
    const size = analyzeFileSize(file);
    totalHtmlSize += size;
    console.log(`  ${path.basename(file)}: ${formatBytes(size)}`);
});
console.log(`  –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä HTML: ${formatBytes(totalHtmlSize)}\n`);

// –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
const totalSize = totalCssSize + totalImageSize + totalJsSize + totalHtmlSize;
console.log('üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(`  CSS: ${formatBytes(totalCssSize)} (${((totalCssSize / totalSize) * 100).toFixed(1)}%)`);
console.log(`  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${formatBytes(totalImageSize)} (${((totalImageSize / totalSize) * 100).toFixed(1)}%)`);
console.log(`  JavaScript: ${formatBytes(totalJsSize)} (${((totalJsSize / totalSize) * 100).toFixed(1)}%)`);
console.log(`  HTML: ${formatBytes(totalHtmlSize)} (${((totalHtmlSize / totalSize) * 100).toFixed(1)}%)`);
console.log(`  –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${formatBytes(totalSize)}\n`);

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:');

if (totalImageSize > totalSize * 0.6) {
    console.log('  ‚ö†Ô∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–Ω–∏–º–∞—é—Ç –±–æ–ª–µ–µ 60% –æ—Ç –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞');
    console.log('     –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:');
    console.log('     - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ WebP —Ñ–æ—Ä–º–∞—Ç');
    console.log('     - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å lazy loading –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    console.log('     - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
}

if (totalCssSize > 100 * 1024) { // –ë–æ–ª—å—à–µ 100KB
    console.log('  ‚ö†Ô∏è  CSS —Ñ–∞–π–ª—ã –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–∏–µ');
    console.log('     –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:');
    console.log('     - –ú–∏–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å CSS');
    console.log('     - –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å—Ç–∏–ª–∏');
    console.log('     - –†–∞–∑–¥–µ–ª–∏—Ç—å CSS –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏ –Ω–µ–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç–∏–ª–∏');
}

if (totalJsSize > 200 * 1024) { // –ë–æ–ª—å—à–µ 200KB
    console.log('  ‚ö†Ô∏è  JavaScript —Ñ–∞–π–ª—ã –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–∏–µ');
    console.log('     –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:');
    console.log('     - –ú–∏–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å JavaScript');
    console.log('     - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å code splitting');
    console.log('     - –ó–∞–≥—Ä—É–∂–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è lazy loading
console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π:');

const indexContent = fs.readFileSync('views/index.ejs', 'utf8');
if (indexContent.includes('loading="lazy"')) {
    console.log('  ‚úÖ Lazy loading –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
} else {
    console.log('  ‚ùå Lazy loading –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

if (fs.existsSync('public/css/mobile.css')) {
    console.log('  ‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è CSS –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
} else {
    console.log('  ‚ùå –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è CSS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
}

if (fs.existsSync('public/sitemap.xml')) {
    console.log('  ‚úÖ Sitemap.xml —Å–æ–∑–¥–∞–Ω');
} else {
    console.log('  ‚ùå Sitemap.xml –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
}

if (fs.existsSync('public/robots.txt')) {
    console.log('  ‚úÖ Robots.txt —Å–æ–∑–¥–∞–Ω');
} else {
    console.log('  ‚ùå Robots.txt –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–∞-—Ç–µ–≥–æ–≤
if (indexContent.includes('viewport') && indexContent.includes('description')) {
    console.log('  ‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
} else {
    console.log('  ‚ùå –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–∞-—Ç–µ–≥–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
}

console.log('\n‚úÖ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à—ë–Ω!'); 