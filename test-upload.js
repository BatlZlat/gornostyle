const FormData = require('form-data');
const fs = require('fs');
const axios = require('axios');

async function testUpload() {
    try {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const testImagePath = 'test-image.jpg';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if (!fs.existsSync(testImagePath)) {
            console.log('‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª test-image.jpg');
            return;
        }

        const form = new FormData();
        form.append('photo', fs.createReadStream(testImagePath));

        console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...');

        const response = await axios.post('http://localhost:8080/api/trainers/2/upload-photo', form, {
            headers: {
                ...form.getHeaders(),
            },
            timeout: 10000
        });

        console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ —Ñ–∞–π–ª
        const files = fs.readdirSync('public/images/trainers');
        console.log('üìÅ –§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ trainers:', files);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    }
}

testUpload(); 